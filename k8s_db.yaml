# Kubernetes deployment for the application.
---
# Namespace for the database server
apiVersion: v1
kind: Namespace
metadata:
  name: db-server
---
# Config Map for the config.sql file.
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: db-server
  name: database-initialization-script
data:
  config.sql: |
    DROP DATABASE IF EXISTS website;
    CREATE DATABASE website;
    USE website;

    CREATE TABLE users(
        id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
        username VARCHAR(64) NOT NULL UNIQUE,
        email VARCHAR(254),
        password_hash CHAR(60) NOT NULL
    );

    -- Stick some sample data in there yeah yeah

    INSERT INTO users(username, email, password_hash) VALUES (
      'awesomeuser123',
        'awesomeuser@awesomedomain.com',
        '$2a$12$R9h/cIPz0gi.URNNX3kh2OPST9/PgBkqquzi.Ss7KIUgO2t0jWMUW' -- This is just a test hash.
    ),
    (
      'anotheruser456',
        'thisguysucks@baddomain.lol',
        '$2a$12$R9h/cIPz0gi.URNN83kh2OPST9/PgBkqquzi/Ss7KIPgO2t0jWMUW' -- This is just a test hash.
    );
---
# Database deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: db-server
  name: database-deployment
# This is the POD spec.
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql-pod
    # This is the CONTAINER spec, comprising the containers in this pod. (There's only 1 here.)
    spec:
      containers:
      - name: mysql-container
        image: mysql:8
        imagePullPolicy: Always
        # The ports to be exposed on the container(s) in this spec.
        ports:
        - containerPort: 3306
          name: mysql-port
        # The environment variables to expose to the container.
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password123
        volumeMounts:
        - name: database-initialization-script
          mountPath: /docker-entrypoint-initdb.d/config.sql
          subPath: config.sql
      volumes:
      - name: database-initialization-script
        configMap:
            name: database-initialization-script
            items:
              - key: config.sql
                path: config.sql
  # The selector uses matches to group pods with certain properties under this deployment.
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql-pod
---
# Database service
apiVersion: v1
kind: Service
metadata:
  namespace: db-server
  name: database-service
spec:
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
  type: NodePort
  # This specifies pod metadata to be grouped under this service.
  selector:
    app.kubernetes.io/name: mysql-pod
---
