# Kubernetes deployment for the server portion of the 2-container application.
# This file should be run after the database spec to create the "db-server" namespace and database first.
# When both services are being brought down consecutively, THE SERVICES IN THIS FILE NEEDS TO BE BROUGHT DOWN FIRST.
---
# API server deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: db-server
  name: server-deployment
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: server-pod
    spec:
      containers:
      - name: server-container
        image: lachldwaws/mysql_basic_api:1.0
        imagePullPolicy: Always
        ports:
        # Internally, the API wrapper is exposed on port 5000, so this is the port we need to expose.
        - containerPort: 5000
          name: server-port
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password123
  selector:
    matchLabels:
      app.kubernetes.io/name: server-pod
---
# API server service
apiVersion: v1
kind: Service
metadata:
  namespace: db-server
  name: server
spec:
  ports:
      # The port is the port on which the target port is mapped to outside the container.
    - port: 9001
      # The target port is the port on which the app is running inside the container.
      targetPort: 5000
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: server-pod
---
# Ingress for the API server service. We don't expose the database service because there's no need to do so.
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: db-server
  name: server-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: server
              port:
                number: 9001
---